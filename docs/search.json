[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "testwebsite",
    "section": "",
    "text": "This is a Quarto website."
  },
  {
    "objectID": "index.html#홈페이지-첫-화면",
    "href": "index.html#홈페이지-첫-화면",
    "title": "testwebsite",
    "section": "홈페이지 첫 화면",
    "text": "홈페이지 첫 화면\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "7/15 숙제1",
    "section": "",
    "text": "ctrl alt P\n\nimport pandas as pd\ndf = pd.DataFrame({\n  \"col1\": [1, 2, 3]\n})\ndf\n\n\n\n\n\n\n\n\ncol1\n\n\n\n\n0\n1\n\n\n1\n2\n\n\n2\n3"
  },
  {
    "objectID": "hw1.html#다음-표의-내용을-데이터-프레임으로",
    "href": "hw1.html#다음-표의-내용을-데이터-프레임으로",
    "title": "7/15 숙제1",
    "section": "",
    "text": "ctrl alt P\n\nimport pandas as pd\ndf = pd.DataFrame({\n  \"col1\": [1, 2, 3]\n})\ndf\n\n\n\n\n\n\n\n\ncol1\n\n\n\n\n0\n1\n\n\n1\n2\n\n\n2\n3"
  },
  {
    "objectID": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "7/15 숙제1",
    "section": "다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.",
    "text": "다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.\n\nimport pandas as pd\npd.set_option('display.max_columns', None)\ndf = pd.DataFrame({\n  '제품': [\"사과\", \"딸기\", \"수박\"],\n  '가격': [1800, 1500, 3000],\n  '판매량': [24, 38, 13]\n})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "hw1.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "hw1.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "7/15 숙제1",
    "section": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.",
    "text": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nprice_mean = df[\"가격\"].mean()\ncount_mean = df[\"판매량\"].mean()\nprint(\"가격 평균:\", price_mean, \"판매량 평균:\", count_mean)\n\n가격 평균: 2100.0 판매량 평균: 25.0\n\n\n\n2"
  },
  {
    "objectID": "hw1.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "href": "hw1.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "title": "7/15 숙제1",
    "section": "mpg 데이터를 불러와 복사본을 만드세요.",
    "text": "mpg 데이터를 불러와 복사본을 만드세요.\n\ndf = pd.read_csv(\"mpg.csv\")\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw1.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "hw1.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "7/15 숙제1",
    "section": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\ndf.rename(columns = {'cty' : 'city'}, inplace = True)\ndf.rename(columns = {'hwy' : 'highway'}, inplace = True)"
  },
  {
    "objectID": "hw1.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해-보세요.",
    "href": "hw1.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해-보세요.",
    "title": "7/15 숙제1",
    "section": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요.",
    "text": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요.\n\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n3"
  },
  {
    "objectID": "hw1.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "hw1.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "7/15 숙제1",
    "section": "midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\ndf = pd.read_csv(\"midwest.csv\")\ndf\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\npercblack\npercamerindan\npercasian\npercother\npopadults\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n124\n96.712059\n2.575276\n0.148283\n0.376759\n0.187623\n43298\n75.107395\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n9\n66.384340\n32.900433\n0.178807\n0.451722\n0.084698\n6724\n59.726353\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n34\n96.571276\n2.861717\n0.233473\n0.106731\n0.226803\n9669\n69.334988\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n1139\n95.254171\n0.412257\n0.149322\n0.486918\n3.697332\n19272\n75.472188\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n6\n90.198766\n9.372858\n0.239890\n0.085675\n0.102810\n3979\n68.861523\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n1935\n97.899020\n0.359680\n0.220534\n0.885746\n0.635020\n195837\n87.988991\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n170\n99.112875\n0.047718\n0.271126\n0.199549\n0.368732\n30109\n72.137899\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n149\n98.498839\n0.149600\n0.361104\n0.221821\n0.768636\n13316\n70.006008\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n388\n97.507127\n0.496722\n0.488170\n1.231471\n0.276511\n88960\n80.619379\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n155\n98.032742\n0.122274\n0.653488\n0.980912\n0.210584\n46796\n78.295153\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns"
  },
  {
    "objectID": "hw1.html#poptotal전체-인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "href": "hw1.html#poptotal전체-인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "title": "7/15 숙제1",
    "section": "poptotal(전체 인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.",
    "text": "poptotal(전체 인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.\n\ndf.rename(columns = {'poptotal' : 'total'}, inplace = True)\ndf.rename(columns = {'popasian' : 'asian'}, inplace = True)\ndf\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\npopother\npercwhite\npercblack\npercamerindan\npercasian\npercother\npopadults\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n124\n96.712059\n2.575276\n0.148283\n0.376759\n0.187623\n43298\n75.107395\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n9\n66.384340\n32.900433\n0.178807\n0.451722\n0.084698\n6724\n59.726353\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n34\n96.571276\n2.861717\n0.233473\n0.106731\n0.226803\n9669\n69.334988\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n1139\n95.254171\n0.412257\n0.149322\n0.486918\n3.697332\n19272\n75.472188\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n6\n90.198766\n9.372858\n0.239890\n0.085675\n0.102810\n3979\n68.861523\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n1935\n97.899020\n0.359680\n0.220534\n0.885746\n0.635020\n195837\n87.988991\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n170\n99.112875\n0.047718\n0.271126\n0.199549\n0.368732\n30109\n72.137899\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n149\n98.498839\n0.149600\n0.361104\n0.221821\n0.768636\n13316\n70.006008\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n388\n97.507127\n0.496722\n0.488170\n1.231471\n0.276511\n88960\n80.619379\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n155\n98.032742\n0.122274\n0.653488\n0.980912\n0.210584\n46796\n78.295153\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns"
  },
  {
    "objectID": "hw1.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생-변수를-추가하고-히스토그램을-만들어-분포를-살펴-보세요.",
    "href": "hw1.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생-변수를-추가하고-히스토그램을-만들어-분포를-살펴-보세요.",
    "title": "7/15 숙제1",
    "section": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생 변수를 추가하고, 히스토그램을 만들어 분포를 살펴 보세요.",
    "text": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생 변수를 추가하고, 히스토그램을 만들어 분포를 살펴 보세요.\n\nimport matplotlib.pyplot as plt\n\ndf[\"per_asian\"] = df[\"asian\"] / df[\"total\"] * 100\nplt.hist(df[\"per_asian\"])\nplt.show()"
  },
  {
    "objectID": "hw1.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "href": "hw1.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "title": "7/15 숙제1",
    "section": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.",
    "text": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nimport numpy as np\nper_asian_mean = df[\"per_asian\"].mean()\ndf[\"per_asian_mean\"] = np.where(df[\"per_asian\"] &gt; per_asian_mean, \"large\", \"small\")\ndf[\"per_asian_mean\"]\n\n0      small\n1      small\n2      small\n3      small\n4      small\n       ...  \n432    large\n433    small\n434    small\n435    large\n436    large\nName: per_asian_mean, Length: 437, dtype: object"
  },
  {
    "objectID": "hw1.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "hw1.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "7/15 숙제1",
    "section": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\npd.crosstab(df[\"county\"], df[\"per_asian_mean\"])\n\n\n\n\n\n\n\nper_asian_mean\nlarge\nsmall\n\n\ncounty\n\n\n\n\n\n\nADAMS\n0\n4\n\n\nALCONA\n0\n1\n\n\nALEXANDER\n0\n1\n\n\nALGER\n0\n1\n\n\nALLEGAN\n0\n1\n\n\n...\n...\n...\n\n\nWINNEBAGO\n1\n0\n\n\nWOOD\n2\n0\n\n\nWOODFORD\n0\n1\n\n\nWYANDOT\n0\n1\n\n\nWinnebago\n1\n0\n\n\n\n\n320 rows × 2 columns\n\n\n\n\ncount = df[\"per_asian_mean\"].value_counts()\ncount.plot.bar(rot = 0)\nplt.show()"
  },
  {
    "objectID": "hw2.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "href": "hw2.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "title": "7/16 숙제2",
    "section": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.",
    "text": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\ndf = pd.read_csv(\"mpg.csv\")\ndispl_4 = df.query(\"displ &lt;= 4\")\ndispl_5 = df.query(\"displ &gt;= 5\")\n\nprint(\"배기량 4 이하:\", displ_4[\"hwy\"].mean(), \"배기량 5 이상:\", displ_5[\"hwy\"].mean())\n\n배기량 4 이하: 25.96319018404908 배기량 5 이상: 18.07894736842105"
  },
  {
    "objectID": "hw2.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "href": "hw2.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "title": "7/16 숙제2",
    "section": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.",
    "text": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.\n\naudi = df.query(\"manufacturer == 'audi'\")\ntoyota = df.query(\"manufacturer == 'toyota'\")\n\nprint(\"audi:\", audi[\"cty\"].mean(), \"toyota:\", toyota[\"cty\"].mean())\n\naudi: 17.61111111111111 toyota: 18.529411764705884"
  },
  {
    "objectID": "hw2.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해-보세요.",
    "href": "hw2.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해-보세요.",
    "title": "7/16 숙제2",
    "section": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.",
    "text": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.\n\ncfh = df.query(\"manufacturer in ['chevrolet', 'ford', 'honda']\")\ncfh[\"hwy\"].mean()\n\n22.50943396226415\n\n\n\n2"
  },
  {
    "objectID": "hw2.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "href": "hw2.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "title": "7/16 숙제2",
    "section": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.",
    "text": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\naudi = df.query(\"manufacturer in 'audi'\").sort_values(\"hwy\", ascending = False).head(5)\naudi\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n\n\n\n\n\n\n3"
  },
  {
    "objectID": "hw2.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "href": "hw2.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "title": "7/16 숙제2",
    "section": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.",
    "text": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\ndf = pd.read_csv(\"mpg.csv\")\nmpg = df.copy()\nmpg = mpg.assign(mileage = mpg[\"cty\"] + mpg[\"hwy\"])\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nmileage\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n\n\n\n\n234 rows × 12 columns"
  },
  {
    "objectID": "hw2.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "href": "hw2.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "title": "7/16 숙제2",
    "section": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.",
    "text": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.\n\nmpg = mpg.assign(mean = mpg[\"mileage\"] / 2)\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nmileage\nmean\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n23.5\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n25.0\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n21.0\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n22.0\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n21.5\n\n\n\n\n234 rows × 13 columns"
  },
  {
    "objectID": "hw2.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "href": "hw2.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "title": "7/16 숙제2",
    "section": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.",
    "text": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nmpg.sort_values(\"mean\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nmileage\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "hw2.html#번-문제를-해결할-수-있는-하나로-연결된-panda-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "href": "hw2.html#번-문제를-해결할-수-있는-하나로-연결된-panda-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "title": "7/16 숙제2",
    "section": "1 ~ 3번 문제를 해결할 수 있는 하나로 연결된 panda 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.",
    "text": "1 ~ 3번 문제를 해결할 수 있는 하나로 연결된 panda 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.\n\ndf = df.assign(\n  mileage = lambda x: x[\"cty\"] + x[\"hwy\"],\n  mean = lambda x: x[\"mileage\"] / 2\n).sort_values(\"mean\", ascending = False).head(3)\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nmileage\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "hw2.html#mpg-데이터는-연비를-나타내는-변수가-hwy고속도로-연비-cty도시-연비-두-종류로-분리되어-있습니다.-두-변수를-각각-활용하는-대신-하나의-합산-연비-변수를-만들어-분석하려고-합니다.",
    "href": "hw2.html#mpg-데이터는-연비를-나타내는-변수가-hwy고속도로-연비-cty도시-연비-두-종류로-분리되어-있습니다.-두-변수를-각각-활용하는-대신-하나의-합산-연비-변수를-만들어-분석하려고-합니다.",
    "title": "7/16 숙제2",
    "section": "mpg 데이터는 연비를 나타내는 변수가 hwy(고속도로 연비), cty(도시 연비) 두 종류로 분리되어 있습니다. 두 변수를 각각 활용하는 대신 하나의 합산 연비 변수를 만들어 분석하려고 합니다.",
    "text": "mpg 데이터는 연비를 나타내는 변수가 hwy(고속도로 연비), cty(도시 연비) 두 종류로 분리되어 있습니다. 두 변수를 각각 활용하는 대신 하나의 합산 연비 변수를 만들어 분석하려고 합니다."
  },
  {
    "objectID": "posts/hw1/index.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "posts/hw1/index.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "숙제1",
    "section": "다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.",
    "text": "다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.\n\nimport pandas as pd\npd.set_option('display.max_columns', None)\ndf = pd.DataFrame({\n  '제품': [\"사과\", \"딸기\", \"수박\"],\n  '가격': [1800, 1500, 3000],\n  '판매량': [24, 38, 13]\n})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "posts/hw1/index.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "posts/hw1/index.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "숙제1",
    "section": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.",
    "text": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nprice_mean = df[\"가격\"].mean()\ncount_mean = df[\"판매량\"].mean()\nprint(\"가격 평균:\", price_mean, \"판매량 평균:\", count_mean)\n\n가격 평균: 2100.0 판매량 평균: 25.0\n\n\n\n2"
  },
  {
    "objectID": "posts/hw1/index.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "href": "posts/hw1/index.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "title": "숙제1",
    "section": "mpg 데이터를 불러와 복사본을 만드세요.",
    "text": "mpg 데이터를 불러와 복사본을 만드세요.\n\ndf = pd.read_csv(\"mpg.csv\")\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/index.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "posts/hw1/index.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "숙제1",
    "section": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\ndf.rename(columns = {'cty' : 'city'}, inplace = True)\ndf.rename(columns = {'hwy' : 'highway'}, inplace = True)"
  },
  {
    "objectID": "posts/hw1/index.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해-보세요.",
    "href": "posts/hw1/index.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해-보세요.",
    "title": "숙제1",
    "section": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요.",
    "text": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요.\n\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n3"
  },
  {
    "objectID": "posts/hw1/index.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "posts/hw1/index.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "숙제1",
    "section": "midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\ndf = pd.read_csv(\"midwest.csv\")\ndf\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\npercblack\npercamerindan\npercasian\npercother\npopadults\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n124\n96.712059\n2.575276\n0.148283\n0.376759\n0.187623\n43298\n75.107395\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n9\n66.384340\n32.900433\n0.178807\n0.451722\n0.084698\n6724\n59.726353\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n34\n96.571276\n2.861717\n0.233473\n0.106731\n0.226803\n9669\n69.334988\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n1139\n95.254171\n0.412257\n0.149322\n0.486918\n3.697332\n19272\n75.472188\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n6\n90.198766\n9.372858\n0.239890\n0.085675\n0.102810\n3979\n68.861523\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n1935\n97.899020\n0.359680\n0.220534\n0.885746\n0.635020\n195837\n87.988991\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n170\n99.112875\n0.047718\n0.271126\n0.199549\n0.368732\n30109\n72.137899\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n149\n98.498839\n0.149600\n0.361104\n0.221821\n0.768636\n13316\n70.006008\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n388\n97.507127\n0.496722\n0.488170\n1.231471\n0.276511\n88960\n80.619379\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n155\n98.032742\n0.122274\n0.653488\n0.980912\n0.210584\n46796\n78.295153\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns"
  },
  {
    "objectID": "posts/hw1/index.html#poptotal전체-인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "href": "posts/hw1/index.html#poptotal전체-인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "title": "숙제1",
    "section": "poptotal(전체 인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.",
    "text": "poptotal(전체 인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.\n\ndf.rename(columns = {'poptotal' : 'total'}, inplace = True)\ndf.rename(columns = {'popasian' : 'asian'}, inplace = True)\ndf\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\npopother\npercwhite\npercblack\npercamerindan\npercasian\npercother\npopadults\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n124\n96.712059\n2.575276\n0.148283\n0.376759\n0.187623\n43298\n75.107395\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n9\n66.384340\n32.900433\n0.178807\n0.451722\n0.084698\n6724\n59.726353\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n34\n96.571276\n2.861717\n0.233473\n0.106731\n0.226803\n9669\n69.334988\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n1139\n95.254171\n0.412257\n0.149322\n0.486918\n3.697332\n19272\n75.472188\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n6\n90.198766\n9.372858\n0.239890\n0.085675\n0.102810\n3979\n68.861523\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n1935\n97.899020\n0.359680\n0.220534\n0.885746\n0.635020\n195837\n87.988991\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n170\n99.112875\n0.047718\n0.271126\n0.199549\n0.368732\n30109\n72.137899\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n149\n98.498839\n0.149600\n0.361104\n0.221821\n0.768636\n13316\n70.006008\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n388\n97.507127\n0.496722\n0.488170\n1.231471\n0.276511\n88960\n80.619379\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n155\n98.032742\n0.122274\n0.653488\n0.980912\n0.210584\n46796\n78.295153\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns"
  },
  {
    "objectID": "posts/hw1/index.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생-변수를-추가하고-히스토그램을-만들어-분포를-살펴-보세요.",
    "href": "posts/hw1/index.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생-변수를-추가하고-히스토그램을-만들어-분포를-살펴-보세요.",
    "title": "숙제1",
    "section": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생 변수를 추가하고, 히스토그램을 만들어 분포를 살펴 보세요.",
    "text": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생 변수를 추가하고, 히스토그램을 만들어 분포를 살펴 보세요.\n\nimport matplotlib.pyplot as plt\n\ndf[\"per_asian\"] = df[\"asian\"] / df[\"total\"] * 100\nplt.hist(df[\"per_asian\"])\nplt.show()"
  },
  {
    "objectID": "posts/hw1/index.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "href": "posts/hw1/index.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "title": "숙제1",
    "section": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.",
    "text": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nimport numpy as np\nper_asian_mean = df[\"per_asian\"].mean()\ndf[\"per_asian_mean\"] = np.where(df[\"per_asian\"] &gt; per_asian_mean, \"large\", \"small\")\ndf[\"per_asian_mean\"]\n\n0      small\n1      small\n2      small\n3      small\n4      small\n       ...  \n432    large\n433    small\n434    small\n435    large\n436    large\nName: per_asian_mean, Length: 437, dtype: object"
  },
  {
    "objectID": "posts/hw1/index.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "posts/hw1/index.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "숙제1",
    "section": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\npd.crosstab(df[\"county\"], df[\"per_asian_mean\"])\n\n\n\n\n\n\n\nper_asian_mean\nlarge\nsmall\n\n\ncounty\n\n\n\n\n\n\nADAMS\n0\n4\n\n\nALCONA\n0\n1\n\n\nALEXANDER\n0\n1\n\n\nALGER\n0\n1\n\n\nALLEGAN\n0\n1\n\n\n...\n...\n...\n\n\nWINNEBAGO\n1\n0\n\n\nWOOD\n2\n0\n\n\nWOODFORD\n0\n1\n\n\nWYANDOT\n0\n1\n\n\nWinnebago\n1\n0\n\n\n\n\n320 rows × 2 columns\n\n\n\n\ncount = df[\"per_asian_mean\"].value_counts()\ncount.plot.bar(rot = 0)\nplt.show()"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "myblog",
    "section": "",
    "text": "project1 - 기역조\n\n\n\n\n\n\nproject\n\n\n\n\n\n\n\n\n\nJul 24, 2024\n\n\n강남규, 권효은, 김연예진, 김연진\n\n\n\n\n\n\n\n\n\n\n\n\n숙제1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\n권효은\n\n\n\n\n\n\n\n\n\n\n\n\n숙제2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 16, 2024\n\n\n권효은\n\n\n\n\n\n\n\n\n\n\n\n\n숙제3\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 25, 2024\n\n\n권효은\n\n\n\n\n\n\n\n\n\n\n\n\n숙제4\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 29, 2024\n\n\n권효은\n\n\n\n\n\n\n\n\n\n\n\n\ntmp\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\n권효은\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/hw2/index.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "href": "posts/hw2/index.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "title": "숙제2",
    "section": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.",
    "text": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\ndf = pd.read_csv(\"mpg.csv\")\ndispl_4 = df.query(\"displ &lt;= 4\")\ndispl_5 = df.query(\"displ &gt;= 5\")\n\nprint(\"배기량 4 이하:\", displ_4[\"hwy\"].mean(), \"배기량 5 이상:\", displ_5[\"hwy\"].mean())\n\n배기량 4 이하: 25.96319018404908 배기량 5 이상: 18.07894736842105"
  },
  {
    "objectID": "posts/hw2/index.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "href": "posts/hw2/index.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "title": "숙제2",
    "section": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.",
    "text": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.\n\naudi = df.query(\"manufacturer == 'audi'\")\ntoyota = df.query(\"manufacturer == 'toyota'\")\n\nprint(\"audi:\", audi[\"cty\"].mean(), \"toyota:\", toyota[\"cty\"].mean())\n\naudi: 17.61111111111111 toyota: 18.529411764705884"
  },
  {
    "objectID": "posts/hw2/index.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해-보세요.",
    "href": "posts/hw2/index.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해-보세요.",
    "title": "숙제2",
    "section": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.",
    "text": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.\n\ncfh = df.query(\"manufacturer in ['chevrolet', 'ford', 'honda']\")\ncfh[\"hwy\"].mean()\n\n22.50943396226415\n\n\n\n2"
  },
  {
    "objectID": "posts/hw2/index.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "href": "posts/hw2/index.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "title": "숙제2",
    "section": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.",
    "text": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\naudi = df.query(\"manufacturer in 'audi'\").sort_values(\"hwy\", ascending = False).head(5)\naudi\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n\n\n\n\n\n\n3"
  },
  {
    "objectID": "posts/hw2/index.html#mpg-데이터는-연비를-나타내는-변수가-hwy고속도로-연비-cty도시-연비-두-종류로-분리되어-있습니다.-두-변수를-각각-활용하는-대신-하나의-합산-연비-변수를-만들어-분석하려고-합니다.",
    "href": "posts/hw2/index.html#mpg-데이터는-연비를-나타내는-변수가-hwy고속도로-연비-cty도시-연비-두-종류로-분리되어-있습니다.-두-변수를-각각-활용하는-대신-하나의-합산-연비-변수를-만들어-분석하려고-합니다.",
    "title": "숙제2",
    "section": "mpg 데이터는 연비를 나타내는 변수가 hwy(고속도로 연비), cty(도시 연비) 두 종류로 분리되어 있습니다. 두 변수를 각각 활용하는 대신 하나의 합산 연비 변수를 만들어 분석하려고 합니다.",
    "text": "mpg 데이터는 연비를 나타내는 변수가 hwy(고속도로 연비), cty(도시 연비) 두 종류로 분리되어 있습니다. 두 변수를 각각 활용하는 대신 하나의 합산 연비 변수를 만들어 분석하려고 합니다."
  },
  {
    "objectID": "posts/hw2/index.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "href": "posts/hw2/index.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "title": "숙제2",
    "section": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.",
    "text": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\ndf = pd.read_csv(\"mpg.csv\")\nmpg = df.copy()\nmpg = mpg.assign(mileage = mpg[\"cty\"] + mpg[\"hwy\"])\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nmileage\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n\n\n\n\n234 rows × 12 columns"
  },
  {
    "objectID": "posts/hw2/index.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "href": "posts/hw2/index.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "title": "숙제2",
    "section": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.",
    "text": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.\n\nmpg = mpg.assign(mean = mpg[\"mileage\"] / 2)\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nmileage\nmean\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n23.5\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n25.0\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n21.0\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n22.0\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n21.5\n\n\n\n\n234 rows × 13 columns"
  },
  {
    "objectID": "posts/hw2/index.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "href": "posts/hw2/index.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "title": "숙제2",
    "section": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.",
    "text": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nmpg.sort_values(\"mean\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nmileage\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw2/index.html#번-문제를-해결할-수-있는-하나로-연결된-panda-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "href": "posts/hw2/index.html#번-문제를-해결할-수-있는-하나로-연결된-panda-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "title": "숙제2",
    "section": "1 ~ 3번 문제를 해결할 수 있는 하나로 연결된 panda 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.",
    "text": "1 ~ 3번 문제를 해결할 수 있는 하나로 연결된 panda 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.\n\ndf = df.assign(\n  mileage = lambda x: x[\"cty\"] + x[\"hwy\"],\n  mean = lambda x: x[\"mileage\"] / 2\n).sort_values(\"mean\", ascending = False).head(3)\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nmileage\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/plotly/textbook-chap8.html",
    "href": "posts/plotly/textbook-chap8.html",
    "title": "교과서 챕터 8",
    "section": "",
    "text": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nmpg = pd.read_csv(\"mpg.csv\")\nmpg.shape\n\n(234, 11)\n\n\n\n\n\nsns.scatterplot(data=mpg, x = \"displ\", y = \"hwy\", hue = \"drv\").set(xlim = [3, 6], ylim = [10, 30])\nplt.show()\n\n\n\n\n\n\n\n\n\npx.scatter(data_frame=mpg, x = \"displ\", y = \"hwy\", color = \"drv\")\n\n                                                \n\n\n데이터 전처리하기\n\ndf_mpg = mpg.groupby(\"drv\", as_index = False) \\\n  .agg(mean_hwy=('hwy', 'mean'))\ndf_mpg\n\n\n\n\n\n\n\n\ndrv\nmean_hwy\n\n\n\n\n0\n4\n19.174757\n\n\n1\nf\n28.160377\n\n\n2\nr\n21.000000\n\n\n\n\n\n\n\n\n\n\n\nsns.barplot(data = df_mpg.sort_values(\"mean_hwy\"), x = \"drv\", y = \"mean_hwy\", hue = \"drv\")\nplt.show()"
  },
  {
    "objectID": "posts/plotly/textbook-chap8.html#빈도-막대-그래프-그리기",
    "href": "posts/plotly/textbook-chap8.html#빈도-막대-그래프-그리기",
    "title": "testwebsite",
    "section": "빈도 막대 그래프 그리기",
    "text": "빈도 막대 그래프 그리기"
  },
  {
    "objectID": "posts/plotly/textbook-chap8.html#데이터-받기",
    "href": "posts/plotly/textbook-chap8.html#데이터-받기",
    "title": "교과서 챕터 8",
    "section": "",
    "text": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nmpg = pd.read_csv(\"mpg.csv\")\nmpg.shape\n\n(234, 11)\n\n\n\n\n\nsns.scatterplot(data=mpg, x = \"displ\", y = \"hwy\", hue = \"drv\").set(xlim = [3, 6], ylim = [10, 30])\nplt.show()\n\n\n\n\n\n\n\n\n\npx.scatter(data_frame=mpg, x = \"displ\", y = \"hwy\", color = \"drv\")\n\n                                                \n\n\n데이터 전처리하기\n\ndf_mpg = mpg.groupby(\"drv\", as_index = False) \\\n  .agg(mean_hwy=('hwy', 'mean'))\ndf_mpg\n\n\n\n\n\n\n\n\ndrv\nmean_hwy\n\n\n\n\n0\n4\n19.174757\n\n\n1\nf\n28.160377\n\n\n2\nr\n21.000000\n\n\n\n\n\n\n\n\n\n\n\nsns.barplot(data = df_mpg.sort_values(\"mean_hwy\"), x = \"drv\", y = \"mean_hwy\", hue = \"drv\")\nplt.show()"
  },
  {
    "objectID": "posts/plotly/textbook-chap8.html#빈도에-대한-barplot",
    "href": "posts/plotly/textbook-chap8.html#빈도에-대한-barplot",
    "title": "교과서 챕터 8",
    "section": "빈도에 대한 barplot()",
    "text": "빈도에 대한 barplot()\n\ndf_mpg = mpg.groupby(\"drv\", as_index = False).agg(n = ('drv' , 'count'))\nsns.barplot(data = df_mpg, x = 'drv', y = 'n')\nplt.show()"
  },
  {
    "objectID": "posts/plotly/textbook-chap8.html#countplot으로-빈도-막대그래프-그리기",
    "href": "posts/plotly/textbook-chap8.html#countplot으로-빈도-막대그래프-그리기",
    "title": "교과서 챕터 8",
    "section": "countplot()으로 빈도 막대그래프 그리기",
    "text": "countplot()으로 빈도 막대그래프 그리기\n\nsns.countplot(data = mpg, x = 'drv', order = mpg['drv'].value_counts().index)\nplt.show()"
  },
  {
    "objectID": "posts/plotly/textbook-chap8.html#인터랙티브-산점도-그리기",
    "href": "posts/plotly/textbook-chap8.html#인터랙티브-산점도-그리기",
    "title": "testwebsite",
    "section": "인터랙티브 산점도 그리기",
    "text": "인터랙티브 산점도 그리기\n\nimport plotly.express as px\npx.scatter(data_frame = mpg, x = 'cty', y = 'hwy', color = 'drv')"
  },
  {
    "objectID": "posts/plotly/textbook-chap8.html#인터랙티브-막대그래프-그리기",
    "href": "posts/plotly/textbook-chap8.html#인터랙티브-막대그래프-그리기",
    "title": "교과서 챕터 8",
    "section": "인터랙티브 막대그래프 그리기",
    "text": "인터랙티브 막대그래프 그리기\n\ndf = mpg.groupby('category', as_index = False).agg(n = ('category', 'count'))\ndf\n\n\n\n\n\n\n\n\ncategory\nn\n\n\n\n\n0\n2seater\n5\n\n\n1\ncompact\n47\n\n\n2\nmidsize\n41\n\n\n3\nminivan\n11\n\n\n4\npickup\n33\n\n\n5\nsubcompact\n35\n\n\n6\nsuv\n62\n\n\n\n\n\n\n\n\npx.bar(data_frame = df, x = 'category', y = 'n', color = 'category')"
  },
  {
    "objectID": "posts/hw3/index.html",
    "href": "posts/hw3/index.html",
    "title": "1",
    "section": "",
    "text": "from scipy.stats import bernoulli\nfrom scipy.stats import binom\nimport seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport math\nfrom scipy.stats import norm\n\ndef my_norm(x, loc, scale):\n  result = []\n  for i in range(len(x)):\n    result.append((1 / (scale * math.sqrt(2 * math.pi))) * \n                  math.exp(-1 / 2 * (((x[i] - loc) / scale)**2)))\n  return np.array(result)\n\nplt.clf()\nx = np.linspace(-7, 13, 50)\ny = my_norm(x, 3, 2)\nplt.plot(x, y)\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#데이터-받기",
    "href": "posts/hw3/index.html#데이터-받기",
    "title": "숙제3",
    "section": "데이터 받기",
    "text": "데이터 받기\n\nmpg = pd.read_csv(\"mpg.csv\")\nmpg.shape\n\n(234, 11)\n\n\n\nscatter() 사용하기\n\nsns.scatterplot(data=mpg, x = \"displ\", y = \"hwy\", hue = \"drv\").set(xlim = [3, 6], ylim = [10, 30])\nplt.show()\n\n\n\n\n\n\n\n\n\npx.scatter(data_frame=mpg, x = \"displ\", y = \"hwy\", color = \"drv\")\n\n                                                \n\n\n데이터 전처리하기\n\ndf_mpg = mpg.groupby(\"drv\", as_index = False) \\\n  .agg(mean_hwy=('hwy', 'mean'))\ndf_mpg\n\n\n\n\n\n\n\n\ndrv\nmean_hwy\n\n\n\n\n0\n4\n19.174757\n\n\n1\nf\n28.160377\n\n\n2\nr\n21.000000\n\n\n\n\n\n\n\n\n\nbarplot() 사용하기\n\nsns.barplot(data = df_mpg.sort_values(\"mean_hwy\"), x = \"drv\", y = \"mean_hwy\", hue = \"drv\")\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#빈도에-대한-barplot",
    "href": "posts/hw3/index.html#빈도에-대한-barplot",
    "title": "숙제3",
    "section": "빈도에 대한 barplot()",
    "text": "빈도에 대한 barplot()\n\ndf_mpg = mpg.groupby(\"drv\", as_index = False).agg(n = ('drv' , 'count'))\nsns.barplot(data = df_mpg, x = 'drv', y = 'n')\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#countplot으로-빈도-막대그래프-그리기",
    "href": "posts/hw3/index.html#countplot으로-빈도-막대그래프-그리기",
    "title": "숙제3",
    "section": "countplot()으로 빈도 막대그래프 그리기",
    "text": "countplot()으로 빈도 막대그래프 그리기\n\nsns.countplot(data = mpg, x = 'drv', order = mpg['drv'].value_counts().index)\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#인터랙티브-막대그래프-그리기",
    "href": "posts/hw3/index.html#인터랙티브-막대그래프-그리기",
    "title": "숙제3",
    "section": "인터랙티브 막대그래프 그리기",
    "text": "인터랙티브 막대그래프 그리기\n\ndf = mpg.groupby('category', as_index = False).agg(n = ('category', 'count'))\ndf\n\n\n\n\n\n\n\n\ncategory\nn\n\n\n\n\n0\n2seater\n5\n\n\n1\ncompact\n47\n\n\n2\nmidsize\n41\n\n\n3\nminivan\n11\n\n\n4\npickup\n33\n\n\n5\nsubcompact\n35\n\n\n6\nsuv\n62\n\n\n\n\n\n\n\n\npx.bar(data_frame = df, x = 'category', y = 'n', color = 'category')"
  },
  {
    "objectID": "posts/hw3/index.html#mpq-데이터의-cty도시-연비와-hwy고속도로-연비-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-cty-y축은-hwy로-된-산점도를-만들어-보세요.",
    "href": "posts/hw3/index.html#mpq-데이터의-cty도시-연비와-hwy고속도로-연비-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-cty-y축은-hwy로-된-산점도를-만들어-보세요.",
    "title": "숙제3",
    "section": "mpq 데이터의 cty(도시 연비)와 hwy(고속도로 연비) 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 cty, y축은 hwy로 된 산점도를 만들어 보세요.",
    "text": "mpq 데이터의 cty(도시 연비)와 hwy(고속도로 연비) 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 cty, y축은 hwy로 된 산점도를 만들어 보세요.\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nmpg = pd.read_csv(\"mpg.csv\")\n\nsns.scatterplot(data=mpg, x = \"cty\", y = \"hwy\")\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#미국의-지역별-인구-통계-정보를-담은-midwest.csv를-이용해-전체-인구와-아시아인-인구-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-poptotal전체-인구-y축은-popasian아시아인-인구으로-된-산점도를-만들어-보세요.-전체-인구는-50만-명-이하-아시아인-인구는-1만-명-이하인-지역만-산점도에-표시되게-설정하세요.",
    "href": "posts/hw3/index.html#미국의-지역별-인구-통계-정보를-담은-midwest.csv를-이용해-전체-인구와-아시아인-인구-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-poptotal전체-인구-y축은-popasian아시아인-인구으로-된-산점도를-만들어-보세요.-전체-인구는-50만-명-이하-아시아인-인구는-1만-명-이하인-지역만-산점도에-표시되게-설정하세요.",
    "title": "숙제3",
    "section": "미국의 지역별 인구 통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal(전체 인구), y축은 popasian(아시아인 인구)으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.",
    "text": "미국의 지역별 인구 통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal(전체 인구), y축은 popasian(아시아인 인구)으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.\n\nmidwest = pd.read_csv(\"midwest.csv\")\nsns.scatterplot(data=midwest, x = \"poptotal\", y = \"popasian\").set(xlim = [0, 500000], ylim = [0, 10000])\nplt.show()\n\n\n\n\n\n\n\n\n\n2"
  },
  {
    "objectID": "posts/hw3/index.html#어떤-회사에서-생산한-suv-차종의-연비가-높은지-알아보려고-합니다.-suv-차종을-대상으로-cty도시-연비-평균이-가장-높은-회사-다섯-곳을-막대-그래프로-표현해-보세요.-막대는-연비가-높은-곳으로-정렬하세요.",
    "href": "posts/hw3/index.html#어떤-회사에서-생산한-suv-차종의-연비가-높은지-알아보려고-합니다.-suv-차종을-대상으로-cty도시-연비-평균이-가장-높은-회사-다섯-곳을-막대-그래프로-표현해-보세요.-막대는-연비가-높은-곳으로-정렬하세요.",
    "title": "숙제3",
    "section": "어떤 회사에서 생산한 ‘suv’ 차종의 연비가 높은지 알아보려고 합니다. ‘suv’ 차종을 대상으로 cty(도시 연비) 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 곳으로 정렬하세요.",
    "text": "어떤 회사에서 생산한 ‘suv’ 차종의 연비가 높은지 알아보려고 합니다. ‘suv’ 차종을 대상으로 cty(도시 연비) 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 곳으로 정렬하세요.\n\nmpg = pd.read_csv(\"mpg.csv\")\nsuv = mpg.query('category == \"suv\"').groupby('manufacturer', as_index = False) \\\n          .agg(mean_cty = ('cty', 'mean')).sort_values('mean_cty', ascending = False) \\\n          .head()\n\nsns.barplot(data=suv, x = 'manufacturer', y = 'mean_cty')\nplt.show()"
  },
  {
    "objectID": "posts/a/index.html",
    "href": "posts/a/index.html",
    "title": "project1 - 기역조",
    "section": "",
    "text": "대한민국 연령별, 지역별 출생율 비교분석"
  },
  {
    "objectID": "posts/a/index.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "href": "posts/a/index.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "title": "project1 - 기역조",
    "section": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?",
    "text": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?\n20-22년도 데이터 추출\n\n전국 모의연령별 출산율 비교를 위한 iloc 활용\n기간: 2020~2022\n그룹: 청년 / 비청년\n\n\nbr2 = br.iloc[[0]]\ntype(br2[\"21_2024\"][0])\nbr2 = br2.iloc[:, 57:78] \nbr2\n\n\n\n\n\n\n\n\n20_1519\n20_2024\n20_2529\n20_3034\n20_3539\n20_4044\n20_4549\n21_1519\n21_2024\n21_2529\n...\n21_3539\n21_4044\n21_4549\n22_1519\n22_2024\n22_2529\n22_3034\n22_3539\n22_4044\n22_4549\n\n\n\n\n0\n0.7\n6.2\n30.6\n78.9\n42.3\n7.1\n0.2\n0.4\n5.0\n27.5\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n\n\n1 rows × 21 columns\n\n\n\n보기 쉽게 만들기 위해 행렬을 뒤집는 transpose 함수 사용\n\nbr2 = br2.transpose()\nbr2\n\n\n\n\n\n\n\n\n0\n\n\n\n\n20_1519\n0.7\n\n\n20_2024\n6.2\n\n\n20_2529\n30.6\n\n\n20_3034\n78.9\n\n\n20_3539\n42.3\n\n\n20_4044\n7.1\n\n\n20_4549\n0.2\n\n\n21_1519\n0.4\n\n\n21_2024\n5.0\n\n\n21_2529\n27.5\n\n\n21_3034\n76.1\n\n\n21_3539\n43.5\n\n\n21_4044\n7.6\n\n\n21_4549\n0.2\n\n\n22_1519\n0.4\n\n\n22_2024\n4.1\n\n\n22_2529\n24.0\n\n\n22_3034\n73.5\n\n\n22_3539\n44.1\n\n\n22_4044\n8.0\n\n\n22_4549\n0.2\n\n\n\n\n\n\n\n새로운 변수명 설정\n\n0 -&gt; birth_rate(모의연령별 출산율)\n비어있는열 -&gt; year\n\n\nbr2 = br2.rename(columns = {0 : 'birth_rate'})\nbr2 = br2.rename_axis(columns = {'' : 'year'}, index = None)\nbr2 = br2.reset_index().rename(columns={'index': 'year'})\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\n\n\n\n\n0\n20_1519\n0.7\n\n\n1\n20_2024\n6.2\n\n\n2\n20_2529\n30.6\n\n\n3\n20_3034\n78.9\n\n\n4\n20_3539\n42.3\n\n\n5\n20_4044\n7.1\n\n\n6\n20_4549\n0.2\n\n\n7\n21_1519\n0.4\n\n\n8\n21_2024\n5.0\n\n\n9\n21_2529\n27.5\n\n\n10\n21_3034\n76.1\n\n\n11\n21_3539\n43.5\n\n\n12\n21_4044\n7.6\n\n\n13\n21_4549\n0.2\n\n\n14\n22_1519\n0.4\n\n\n15\n22_2024\n4.1\n\n\n16\n22_2529\n24.0\n\n\n17\n22_3034\n73.5\n\n\n18\n22_3539\n44.1\n\n\n19\n22_4044\n8.0\n\n\n20\n22_4549\n0.2\n\n\n\n\n\n\n\nnp.where함수로 청년층과 비청년층 구분\n\n청년층: 1, 비청년층: 2 할당\n\n\nbr2['number'] = np.where(br2['year']\\\n                  .isin(['20_2024', '20_2529', '20_3034', '21_2024', '21_2529', '21_3034', '22_2024', '22_2529', '22_3034']), 1, 2)\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\nnumber\n\n\n\n\n0\n20_1519\n0.7\n2\n\n\n1\n20_2024\n6.2\n1\n\n\n2\n20_2529\n30.6\n1\n\n\n3\n20_3034\n78.9\n1\n\n\n4\n20_3539\n42.3\n2\n\n\n5\n20_4044\n7.1\n2\n\n\n6\n20_4549\n0.2\n2\n\n\n7\n21_1519\n0.4\n2\n\n\n8\n21_2024\n5.0\n1\n\n\n9\n21_2529\n27.5\n1\n\n\n10\n21_3034\n76.1\n1\n\n\n11\n21_3539\n43.5\n2\n\n\n12\n21_4044\n7.6\n2\n\n\n13\n21_4549\n0.2\n2\n\n\n14\n22_1519\n0.4\n2\n\n\n15\n22_2024\n4.1\n1\n\n\n16\n22_2529\n24.0\n1\n\n\n17\n22_3034\n73.5\n1\n\n\n18\n22_3539\n44.1\n2\n\n\n19\n22_4044\n8.0\n2\n\n\n20\n22_4549\n0.2\n2\n\n\n\n\n\n\n\n\n청년, 비청년 출산율비교\n20~22년 청년 비청년 모의 출산율\n청년층의 출산율을 알아보기 위해서는 br2 데이터에서 number == 1를 추출하여 평균을 구함 비청년도 같은 방식으로 진행\n\nbr2_youth_rate = br2.query('number == 1')['birth_rate'].mean()\nbr2_non_youth_rate = br2.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br2_youth_rate)\nprint('비청년: ', br2_non_youth_rate)\n\n청년:  36.21111111111111\n비청년:  12.891666666666666\n\n\n12~14년 청년 비청년 모의 출산율\n\nbr3= br.iloc[:, 1:21] ## 12-14년도 데이터 추출\nbr3 = br3.iloc[[0]]\n\nbr3 = br3.transpose()\n\nbr3 = br3.rename(columns = {0 : 'birth_rate'})\nbr3 = br3.rename_axis(columns = {'' : 'year'}, index = None)\nbr3 = br3.reset_index().rename(columns={'index': 'year'})\n\nbr3['number'] = np.where(br3['year']\\\n                  .isin(['12_2024', '12_2529', '12_3034', '13_2024', '13_2529', '13_3034', '14_2024', '14_2529', '14_3034']), 1, 2)\n\n\nbr3_youth_rate = br3.query('number == 1')['birth_rate'].mean()\nbr3_non_youth_rate = br3.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br3_youth_rate)\nprint('비청년: ', br3_non_youth_rate)\n\n청년:  66.32222222222222\n비청년:  12.909090909090908\n\n\n그래프 표현\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndata = pd.DataFrame({\n    'Age Group': ['12_14Youth', '20_22Youth', '12_14Non-Youth', '20_22Non-Youth'],\n    'Mean Birth Rate': [br3_youth_rate, br2_youth_rate, br3_non_youth_rate, br2_non_youth_rate],\n    'Youth': ['Youth', 'Youth', 'Non-Youth', 'Non-Youth']\n})\n\nsns.barplot(x='Age Group', y='Mean Birth Rate', hue='Youth', data=data)\nplt.xlabel('Age Group', fontsize=12)\nplt.ylabel('Mean Birth Rate', fontsize=12)\nplt.title('12-14/20-22 Mean Birth Rate Comparison', fontsize=15)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/a/index.html#결과",
    "href": "posts/a/index.html#결과",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n- 과거대비 청년층의 출산율 감소\n- 비청년층 출산율 변화 없음"
  },
  {
    "objectID": "posts/a/index.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "href": "posts/a/index.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "title": "project1 - 기역조",
    "section": "Q 전국 평균 대비 시도별 청년층의 출산율 비교",
    "text": "Q 전국 평균 대비 시도별 청년층의 출산율 비교\n청년층의 출산율이 높은 지역 상위5 & 하위5\n\nprint('상위' + '\\n')\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\", ascending = False).head(), \"\\n\", \"--------------------------\")\n\nprint('하위' + '\\n')\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\").head())\n\n상위\n\n       시군구별     mean20\n8   세종특별자치시  64.233333\n14     전라남도  56.266667\n12     충청남도  52.100000\n10      강원도  51.300000\n7     울산광역시  49.700000 \n -------------------------\n       시군구별     mean21\n8   세종특별자치시  63.000000\n14     전라남도  49.333333\n10      강원도  47.566667\n12     충청남도  47.533333\n15     경상북도  46.733333 \n -------------------------\n       시군구별     mean22\n8   세종특별자치시  53.066667\n10      강원도  46.033333\n14     전라남도  45.600000\n15     경상북도  44.500000\n12     충청남도  44.400000 \n --------------------------\n하위\n\n    시군구별     mean20\n1  서울특별시  25.700000\n2  부산광역시  33.933333\n5  광주광역시  37.233333\n6  대전광역시  37.366667\n4  인천광역시  38.033333 \n --------------------------\n    시군구별     mean21\n1  서울특별시  23.833333\n2  부산광역시  31.633333\n4  인천광역시  34.600000\n3  대구광역시  35.466667\n0     전국  36.200000 \n --------------------------\n    시군구별     mean22\n1  서울특별시  21.600000\n2  부산광역시  30.900000\n4  인천광역시  32.233333\n0     전국  33.866667\n3  대구광역시  34.100000\n\n\n각 도시 청년층의 평균모의출산율 그래프\n\nimport seaborn as sns\nplt.rcParams.update({'font.family' : 'Malgun Gothic'})\nnew = br[['시군구별', 'mean20']].sort_values(\"mean20\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean20')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2020', fontsize=12)\nplt.title('Mean Birth Rate  2020년도 시군구별 ', fontsize=15)\nplt.show()\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean21']].sort_values(\"mean21\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean21')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2021', fontsize=12)\nplt.title('Mean Birth Rate  2021년도 시군구별 ', fontsize=15)\nplt.show()\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean22']].sort_values(\"mean22\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean22')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2022', fontsize=12)\nplt.title('Mean Birth Rate  2022년도 시군구별 ', fontsize=15)\nplt.show()"
  },
  {
    "objectID": "posts/a/index.html#결과-1",
    "href": "posts/a/index.html#결과-1",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n\n가장 높은 출산율을 보여주는 도시 = 세종특별자치시\n가장 낮은 출산율을 보여주는 도시 = 서울특별시"
  },
  {
    "objectID": "posts/hw3/index.html#자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-합니다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대-그래프를-만들어-보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "href": "posts/hw3/index.html#자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-합니다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대-그래프를-만들어-보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "title": "숙제3",
    "section": "자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.",
    "text": "자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.\n\ndf = mpg.groupby('category', as_index = False).agg(n = ('category', 'count')).sort_values('n', ascending = False)\n\nsns.barplot(data = df, x = 'category', y = 'n')\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#정규분포-pdf-값을-계산하는-자신만의-python-함수를-정의하고-정규분포-mu-3-sigma-2의-pdf를-그릴-것",
    "href": "posts/hw3/index.html#정규분포-pdf-값을-계산하는-자신만의-python-함수를-정의하고-정규분포-mu-3-sigma-2의-pdf를-그릴-것",
    "title": "숙제3",
    "section": "정규분포 pdf 값을 계산하는 자신만의 Python 함수를 정의하고 정규분포 mu = 3, sigma = 2의 pdf를 그릴 것",
    "text": "정규분포 pdf 값을 계산하는 자신만의 Python 함수를 정의하고 정규분포 mu = 3, sigma = 2의 pdf를 그릴 것\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom scipy.stats import norm\n\ndef my_norm(x, loc, scale):\n  return (1 / (scale * np.sqrt(2 * np.pi))) * np.exp(-1 / 2 * (((x - loc) / scale)**2))\n\nplt.clf()\nx = np.linspace(-7, 13, 100)\ny = my_norm(x, 3, 2)\nplt.plot(x, y)\nplt.show()\n\n\n\n\n\n\n\n\n\n2"
  },
  {
    "objectID": "posts/hw3/pre_index.html#mpq-데이터의-cty도시-연비와-hwy고속도로-연비-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-cty-y축은-hwy로-된-산점도를-만들어-보세요.",
    "href": "posts/hw3/pre_index.html#mpq-데이터의-cty도시-연비와-hwy고속도로-연비-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-cty-y축은-hwy로-된-산점도를-만들어-보세요.",
    "title": "숙제3",
    "section": "mpq 데이터의 cty(도시 연비)와 hwy(고속도로 연비) 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 cty, y축은 hwy로 된 산점도를 만들어 보세요.",
    "text": "mpq 데이터의 cty(도시 연비)와 hwy(고속도로 연비) 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 cty, y축은 hwy로 된 산점도를 만들어 보세요.\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nmpg = pd.read_csv(\"mpg.csv\")\n\nsns.scatterplot(data=mpg, x = \"cty\", y = \"hwy\")\nplt.show()"
  },
  {
    "objectID": "posts/hw3/pre_index.html#미국의-지역별-인구-통계-정보를-담은-midwest.csv를-이용해-전체-인구와-아시아인-인구-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-poptotal전체-인구-y축은-popasian아시아인-인구으로-된-산점도를-만들어-보세요.-전체-인구는-50만-명-이하-아시아인-인구는-1만-명-이하인-지역만-산점도에-표시되게-설정하세요.",
    "href": "posts/hw3/pre_index.html#미국의-지역별-인구-통계-정보를-담은-midwest.csv를-이용해-전체-인구와-아시아인-인구-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-poptotal전체-인구-y축은-popasian아시아인-인구으로-된-산점도를-만들어-보세요.-전체-인구는-50만-명-이하-아시아인-인구는-1만-명-이하인-지역만-산점도에-표시되게-설정하세요.",
    "title": "숙제3",
    "section": "미국의 지역별 인구 통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal(전체 인구), y축은 popasian(아시아인 인구)으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.",
    "text": "미국의 지역별 인구 통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal(전체 인구), y축은 popasian(아시아인 인구)으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.\n\nmidwest = pd.read_csv(\"midwest.csv\")\nsns.scatterplot(data=midwest, x = \"poptotal\", y = \"popasian\").set(xlim = [0, 500000], ylim = [0, 10000])\nplt.show()\n\n\n\n\n\n\n\n\n\n2"
  },
  {
    "objectID": "posts/hw3/pre_index.html#어떤-회사에서-생산한-suv-차종의-연비가-높은지-알아보려고-합니다.-suv-차종을-대상으로-cty도시-연비-평균이-가장-높은-회사-다섯-곳을-막대-그래프로-표현해-보세요.-막대는-연비가-높은-곳으로-정렬하세요.",
    "href": "posts/hw3/pre_index.html#어떤-회사에서-생산한-suv-차종의-연비가-높은지-알아보려고-합니다.-suv-차종을-대상으로-cty도시-연비-평균이-가장-높은-회사-다섯-곳을-막대-그래프로-표현해-보세요.-막대는-연비가-높은-곳으로-정렬하세요.",
    "title": "숙제3",
    "section": "어떤 회사에서 생산한 ‘suv’ 차종의 연비가 높은지 알아보려고 합니다. ‘suv’ 차종을 대상으로 cty(도시 연비) 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 곳으로 정렬하세요.",
    "text": "어떤 회사에서 생산한 ‘suv’ 차종의 연비가 높은지 알아보려고 합니다. ‘suv’ 차종을 대상으로 cty(도시 연비) 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 곳으로 정렬하세요.\n\nmpg = pd.read_csv(\"mpg.csv\")\nsuv = mpg.query('category == \"suv\"').groupby('manufacturer', as_index = False) \\\n          .agg(mean_cty = ('cty', 'mean')).sort_values('mean_cty', ascending = False) \\\n          .head()\n\nsns.barplot(data=suv, x = 'manufacturer', y = 'mean_cty')\nplt.show()"
  },
  {
    "objectID": "posts/hw3/pre_index.html#자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-합니다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대-그래프를-만들어-보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "href": "posts/hw3/pre_index.html#자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-합니다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대-그래프를-만들어-보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "title": "숙제3",
    "section": "자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.",
    "text": "자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.\n\ndf = mpg.groupby('category', as_index = False).agg(n = ('category', 'count')).sort_values('n', ascending = False)\n\nsns.barplot(data = df, x = 'category', y = 'n')\nplt.show()"
  },
  {
    "objectID": "posts/hw3/pre_index.html#데이터-받기",
    "href": "posts/hw3/pre_index.html#데이터-받기",
    "title": "숙제3",
    "section": "데이터 받기",
    "text": "데이터 받기\n\nmpg = pd.read_csv(\"mpg.csv\")\nmpg.shape\n\n(234, 11)\n\n\n\nscatter() 사용하기\n\nsns.scatterplot(data=mpg, x = \"displ\", y = \"hwy\", hue = \"drv\").set(xlim = [3, 6], ylim = [10, 30])\nplt.show()\n\n\n\n\n\n\n\n\n\npx.scatter(data_frame=mpg, x = \"displ\", y = \"hwy\", color = \"drv\")\n\n                                                \n\n\n데이터 전처리하기\n\ndf_mpg = mpg.groupby(\"drv\", as_index = False) \\\n  .agg(mean_hwy=('hwy', 'mean'))\ndf_mpg\n\n\n\n\n\n\n\n\ndrv\nmean_hwy\n\n\n\n\n0\n4\n19.174757\n\n\n1\nf\n28.160377\n\n\n2\nr\n21.000000\n\n\n\n\n\n\n\n\n\nbarplot() 사용하기\n\nsns.barplot(data = df_mpg.sort_values(\"mean_hwy\"), x = \"drv\", y = \"mean_hwy\", hue = \"drv\")\nplt.show()"
  },
  {
    "objectID": "posts/hw3/pre_index.html#빈도에-대한-barplot",
    "href": "posts/hw3/pre_index.html#빈도에-대한-barplot",
    "title": "숙제3",
    "section": "빈도에 대한 barplot()",
    "text": "빈도에 대한 barplot()\n\ndf_mpg = mpg.groupby(\"drv\", as_index = False).agg(n = ('drv' , 'count'))\nsns.barplot(data = df_mpg, x = 'drv', y = 'n')\nplt.show()"
  },
  {
    "objectID": "posts/hw3/pre_index.html#countplot으로-빈도-막대그래프-그리기",
    "href": "posts/hw3/pre_index.html#countplot으로-빈도-막대그래프-그리기",
    "title": "숙제3",
    "section": "countplot()으로 빈도 막대그래프 그리기",
    "text": "countplot()으로 빈도 막대그래프 그리기\n\nsns.countplot(data = mpg, x = 'drv', order = mpg['drv'].value_counts().index)\nplt.show()"
  },
  {
    "objectID": "posts/hw3/pre_index.html#인터랙티브-막대그래프-그리기",
    "href": "posts/hw3/pre_index.html#인터랙티브-막대그래프-그리기",
    "title": "숙제3",
    "section": "인터랙티브 막대그래프 그리기",
    "text": "인터랙티브 막대그래프 그리기\n\ndf = mpg.groupby('category', as_index = False).agg(n = ('category', 'count'))\ndf\n\n\n\n\n\n\n\n\ncategory\nn\n\n\n\n\n0\n2seater\n5\n\n\n1\ncompact\n47\n\n\n2\nmidsize\n41\n\n\n3\nminivan\n11\n\n\n4\npickup\n33\n\n\n5\nsubcompact\n35\n\n\n6\nsuv\n62\n\n\n\n\n\n\n\n\npx.bar(data_frame = df, x = 'category', y = 'n', color = 'category')"
  },
  {
    "objectID": "posts/hw3/index.html#python-scipy-패키지-사용해서-다음과-같은-확률을-구하시오-x-n2-32",
    "href": "posts/hw3/index.html#python-scipy-패키지-사용해서-다음과-같은-확률을-구하시오-x-n2-32",
    "title": "숙제3",
    "section": "Python scipy 패키지 사용해서 다음과 같은 확률을 구하시오 X ~ N(2, 3^2)",
    "text": "Python scipy 패키지 사용해서 다음과 같은 확률을 구하시오 X ~ N(2, 3^2)"
  },
  {
    "objectID": "posts/hw3/index.html#px-3",
    "href": "posts/hw3/index.html#px-3",
    "title": "숙제3",
    "section": "1) P(X < 3)",
    "text": "1) P(X &lt; 3)\n\nnorm.cdf(3, loc = 2, scale = 3)\n\n0.6305586598182363"
  },
  {
    "objectID": "posts/hw3/index.html#p2-x-5",
    "href": "posts/hw3/index.html#p2-x-5",
    "title": "숙제3",
    "section": "2) P(2 < X < 5)",
    "text": "2) P(2 &lt; X &lt; 5)\n\nnorm.cdf(5, 2, 3) - norm.cdf(2, 2, 3)\n\n0.3413447460685429"
  },
  {
    "objectID": "posts/hw3/index.html#px-3-or-x-7",
    "href": "posts/hw3/index.html#px-3-or-x-7",
    "title": "숙제3",
    "section": "3) P(X < 3 or X > 7)",
    "text": "3) P(X &lt; 3 or X &gt; 7)\n\n1 - (norm.cdf(7, 2, 3) - norm.cdf(3, 2, 3))\n\n0.678349012091051\n\n\n\n3"
  },
  {
    "objectID": "posts/hw3/index.html#ls-빅데이터-스쿨-학생들의-중간고사-점수는-평균이-30이고-분산이-4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "href": "posts/hw3/index.html#ls-빅데이터-스쿨-학생들의-중간고사-점수는-평균이-30이고-분산이-4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "title": "숙제3",
    "section": "LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?",
    "text": "LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?\n\nnorm.ppf(0.95, loc = 30, scale = 2)\n\n33.28970725390295"
  },
  {
    "objectID": "posts/tmp/pre_index.html#mpq-데이터의-cty도시-연비와-hwy고속도로-연비-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-cty-y축은-hwy로-된-산점도를-만들어-보세요.",
    "href": "posts/tmp/pre_index.html#mpq-데이터의-cty도시-연비와-hwy고속도로-연비-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-cty-y축은-hwy로-된-산점도를-만들어-보세요.",
    "title": "tmp",
    "section": "mpq 데이터의 cty(도시 연비)와 hwy(고속도로 연비) 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 cty, y축은 hwy로 된 산점도를 만들어 보세요.",
    "text": "mpq 데이터의 cty(도시 연비)와 hwy(고속도로 연비) 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 cty, y축은 hwy로 된 산점도를 만들어 보세요.\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nmpg = pd.read_csv(\"mpg.csv\")\n\nsns.scatterplot(data=mpg, x = \"cty\", y = \"hwy\")\nplt.show()"
  },
  {
    "objectID": "posts/tmp/pre_index.html#미국의-지역별-인구-통계-정보를-담은-midwest.csv를-이용해-전체-인구와-아시아인-인구-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-poptotal전체-인구-y축은-popasian아시아인-인구으로-된-산점도를-만들어-보세요.-전체-인구는-50만-명-이하-아시아인-인구는-1만-명-이하인-지역만-산점도에-표시되게-설정하세요.",
    "href": "posts/tmp/pre_index.html#미국의-지역별-인구-통계-정보를-담은-midwest.csv를-이용해-전체-인구와-아시아인-인구-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-poptotal전체-인구-y축은-popasian아시아인-인구으로-된-산점도를-만들어-보세요.-전체-인구는-50만-명-이하-아시아인-인구는-1만-명-이하인-지역만-산점도에-표시되게-설정하세요.",
    "title": "tmp",
    "section": "미국의 지역별 인구 통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal(전체 인구), y축은 popasian(아시아인 인구)으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.",
    "text": "미국의 지역별 인구 통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal(전체 인구), y축은 popasian(아시아인 인구)으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.\n\nmidwest = pd.read_csv(\"midwest.csv\")\nsns.scatterplot(data=midwest, x = \"poptotal\", y = \"popasian\").set(xlim = [0, 500000], ylim = [0, 10000])\nplt.show()\n\n\n\n\n\n\n\n\n\n2"
  },
  {
    "objectID": "posts/tmp/pre_index.html#어떤-회사에서-생산한-suv-차종의-연비가-높은지-알아보려고-합니다.-suv-차종을-대상으로-cty도시-연비-평균이-가장-높은-회사-다섯-곳을-막대-그래프로-표현해-보세요.-막대는-연비가-높은-곳으로-정렬하세요.",
    "href": "posts/tmp/pre_index.html#어떤-회사에서-생산한-suv-차종의-연비가-높은지-알아보려고-합니다.-suv-차종을-대상으로-cty도시-연비-평균이-가장-높은-회사-다섯-곳을-막대-그래프로-표현해-보세요.-막대는-연비가-높은-곳으로-정렬하세요.",
    "title": "tmp",
    "section": "어떤 회사에서 생산한 ‘suv’ 차종의 연비가 높은지 알아보려고 합니다. ‘suv’ 차종을 대상으로 cty(도시 연비) 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 곳으로 정렬하세요.",
    "text": "어떤 회사에서 생산한 ‘suv’ 차종의 연비가 높은지 알아보려고 합니다. ‘suv’ 차종을 대상으로 cty(도시 연비) 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 곳으로 정렬하세요.\n\nmpg = pd.read_csv(\"mpg.csv\")\nsuv = mpg.query('category == \"suv\"').groupby('manufacturer', as_index = False) \\\n          .agg(mean_cty = ('cty', 'mean')).sort_values('mean_cty', ascending = False) \\\n          .head()\n\nsns.barplot(data=suv, x = 'manufacturer', y = 'mean_cty')\nplt.show()"
  },
  {
    "objectID": "posts/tmp/pre_index.html#자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-합니다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대-그래프를-만들어-보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "href": "posts/tmp/pre_index.html#자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-합니다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대-그래프를-만들어-보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "title": "tmp",
    "section": "자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.",
    "text": "자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.\n\ndf = mpg.groupby('category', as_index = False).agg(n = ('category', 'count')).sort_values('n', ascending = False)\n\nsns.barplot(data = df, x = 'category', y = 'n')\nplt.show()"
  },
  {
    "objectID": "posts/tmp/pre_index.html#데이터-받기",
    "href": "posts/tmp/pre_index.html#데이터-받기",
    "title": "tmp",
    "section": "데이터 받기",
    "text": "데이터 받기\n\nmpg = pd.read_csv(\"mpg.csv\")\nmpg.shape\n\n(234, 11)\n\n\n\nscatter() 사용하기\n\nsns.scatterplot(data=mpg, x = \"displ\", y = \"hwy\", hue = \"drv\").set(xlim = [3, 6], ylim = [10, 30])\nplt.show()\n\n\n\n\n\n\n\n\n\npx.scatter(data_frame=mpg, x = \"displ\", y = \"hwy\", color = \"drv\")\n\n                                                \n\n\n데이터 전처리하기\n\ndf_mpg = mpg.groupby(\"drv\", as_index = False) \\\n  .agg(mean_hwy=('hwy', 'mean'))\ndf_mpg\n\n\n\n\n\n\n\n\ndrv\nmean_hwy\n\n\n\n\n0\n4\n19.174757\n\n\n1\nf\n28.160377\n\n\n2\nr\n21.000000\n\n\n\n\n\n\n\n\n\nbarplot() 사용하기\n\nsns.barplot(data = df_mpg.sort_values(\"mean_hwy\"), x = \"drv\", y = \"mean_hwy\", hue = \"drv\")\nplt.show()"
  },
  {
    "objectID": "posts/tmp/pre_index.html#빈도에-대한-barplot",
    "href": "posts/tmp/pre_index.html#빈도에-대한-barplot",
    "title": "tmp",
    "section": "빈도에 대한 barplot()",
    "text": "빈도에 대한 barplot()\n\ndf_mpg = mpg.groupby(\"drv\", as_index = False).agg(n = ('drv' , 'count'))\nsns.barplot(data = df_mpg, x = 'drv', y = 'n')\nplt.show()"
  },
  {
    "objectID": "posts/tmp/pre_index.html#countplot으로-빈도-막대그래프-그리기",
    "href": "posts/tmp/pre_index.html#countplot으로-빈도-막대그래프-그리기",
    "title": "tmp",
    "section": "countplot()으로 빈도 막대그래프 그리기",
    "text": "countplot()으로 빈도 막대그래프 그리기\n\nsns.countplot(data = mpg, x = 'drv', order = mpg['drv'].value_counts().index)\nplt.show()"
  },
  {
    "objectID": "posts/tmp/pre_index.html#인터랙티브-막대그래프-그리기",
    "href": "posts/tmp/pre_index.html#인터랙티브-막대그래프-그리기",
    "title": "tmp",
    "section": "인터랙티브 막대그래프 그리기",
    "text": "인터랙티브 막대그래프 그리기\n\ndf = mpg.groupby('category', as_index = False).agg(n = ('category', 'count'))\ndf\n\n\n\n\n\n\n\n\ncategory\nn\n\n\n\n\n0\n2seater\n5\n\n\n1\ncompact\n47\n\n\n2\nmidsize\n41\n\n\n3\nminivan\n11\n\n\n4\npickup\n33\n\n\n5\nsubcompact\n35\n\n\n6\nsuv\n62\n\n\n\n\n\n\n\n\npx.bar(data_frame = df, x = 'category', y = 'n', color = 'category')"
  },
  {
    "objectID": "study/1.html",
    "href": "study/1.html",
    "title": "stat1",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\n\n\nnp.random.rand(1)\n\narray([0.9263501])\n\n\n랜덤 상수 하나 생성 (0 ~ 1)\n\ndef Y(num, p):\n  x = np.random.rand(num)\n  return np.where(x &lt; p, 1, 0)\n\nY(10, 0.5)\n\narray([1, 0, 0, 0, 1, 0, 1, 1, 0, 0])\n\n\n베르누이 확률 변수 p 만드는 함수\n\ndef Z():\n  x = np.random.rand(1)\n  return np.where(x &lt; 0.2, 0, np.where(x &lt; 0.7, 1, 2))\n\nZ()[0]\n\n1\n\n\n가질 수 있는 값: 0, 1, 2\n각각의 확률: 20%, 50%, 30%\nnp.where(condition, [x, y, ]/): 조건에 따라 선택된 요소를 반환\n\nstat2\n\ndata = np.random.rand(10)\nplt.hist(data, bins = 30, alpha = 0.7, color = \"blue\")\nplt.title('Histogram of Numpy Vector')\nplt.xlabel('Value')\nplt.ylabel('Frequency')\nplt.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nmatplotlib.pyplot.hist(x, bins, range, density, weights, cumulativee, bottom, histtype='bar', align='mid', orientation='vertical', rwidth, log, color, label, stacked, *, data, **kwargs)\nbins: 가로축 구간의 개수\nalpha: 투명도\n\nprint(np.random.rand(50000).reshape(-1, 5))\n\nmean = np.random.rand(50000).reshape(-1, 5).mean(axis = 1)\nplt.hist(mean, color = 'red')\nplt.show()\n\n[[0.02025505 0.78416005 0.62103856 0.52231985 0.30310415]\n [0.5348515  0.65671204 0.11814685 0.68545446 0.53731303]\n [0.08261554 0.57165281 0.85254945 0.65570668 0.59031308]\n ...\n [0.869667   0.30960476 0.25279889 0.64376433 0.42554539]\n [0.1337504  0.15575997 0.90961583 0.03386298 0.42343372]\n [0.39854412 0.84434568 0.14991629 0.70689568 0.9983759 ]]\n\n\n\n\n\n\n\n\n\n5개 뽑아서 10000번 반복하고 그 표본평균을 히스토그램으로 쌓아서 경향 파악\n5개를 10000번 반복하는 걸 50000개 뽑는 걸로 합치고, 구분하기 위해 reshape(row, column)\n\nnp.unique((np.arange(33) - 16) **2)\n\narray([  0,   1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144,\n       169, 196, 225, 256])\n\n\nnumpy.unique(ar): 중복된 값을 제거\n\nx = np.arange(4)\npro_x = np.array([1/6, 2/6, 2/6, 1/6])\n\nEx = sum(x * pro_x) # 기댓값\nExx = sum(x**2 * pro_x) # E[X^2]\n\n# Var(X) = E[X^2] - (E[X])^2\nExx - Ex**2\n\n# or E[(X - E[X])**2]\nsum((x - Ex)**2 * pro_x)\n\n0.9166666666666666\n\n\nX = 0, 1, 2, 3이고 확률이 1/6, 2/6, 2/6, 1/6일 때 분산\n\nx = np.arange(99)\narr = np.concatenate((np.arange(1, 50), np.arange(50, 0, -1)))\npro_x = arr / 2500\n\nEx = sum(x * pro_x)\nExx = sum(x**2 * pro_x)\nExx - Ex**2\n\n416.5000000000009\n\n\n0에서부터 98까지의 정수, 1/2500, 2/2500, 3/2500, … 50/2500, … 1/2500일 때 분산은?\nnp.concatenate(): 기존 축을 따라 배열 시퀀스를 연결 (axis=0이면 행(상하), axis=1이면 열 방향(좌우))"
  },
  {
    "objectID": "posts/hw4/index.html",
    "href": "posts/hw4/index.html",
    "title": "숙제4",
    "section": "",
    "text": "표본분산 계산 시 왜 n-1로 나누는지 알아보도록 하겠습니다.\n균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요."
  },
  {
    "objectID": "posts/hw4/index.html#n-1로-나눈-것을-s_2-n으로-나눈-것을-k_2로-정의하고-s_2의-분포와-k_2의-분포를-그려주세요.-10000개-사용",
    "href": "posts/hw4/index.html#n-1로-나눈-것을-s_2-n으로-나눈-것을-k_2로-정의하고-s_2의-분포와-k_2의-분포를-그려주세요.-10000개-사용",
    "title": "숙제4",
    "section": "1. n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요. (10000개 사용)",
    "text": "1. n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요. (10000개 사용)\n\nfrom scipy.stats import uniform\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\nx = uniform.rvs(loc = 3, scale = 4, size = 200000).reshape(-1, 20)\ns_2 = np.var(x, axis = 1, ddof = 1)\nsns.histplot(s_2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nk_2 = np.var(x, axis = 1, ddof = 0)\nsns.histplot(k_2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw4/index.html#각-분포-그래프-모분산의-위치에-녹색-막대를-그려주세요.",
    "href": "posts/hw4/index.html#각-분포-그래프-모분산의-위치에-녹색-막대를-그려주세요.",
    "title": "숙제4",
    "section": "2. 각 분포 그래프 모분산의 위치에 녹색 막대를 그려주세요.",
    "text": "2. 각 분포 그래프 모분산의 위치에 녹색 막대를 그려주세요.\n\nvar = np.var(x)\nsns.histplot(s_2)\nplt.axvline(x = var, color = 'red', linestyle = '--', linewidth = 1)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nsns.histplot(k_2)\nplt.axvline(x = var, color = 'red', linestyle = '--', linewidth = 1)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw4/index.html#결과를-살펴보고-왜-n-1로-나눈-것을-분산을-추정하는-지표로-사용하는-것이-타당한지-작성해-주세요.",
    "href": "posts/hw4/index.html#결과를-살펴보고-왜-n-1로-나눈-것을-분산을-추정하는-지표로-사용하는-것이-타당한지-작성해-주세요.",
    "title": "숙제4",
    "section": "3. 결과를 살펴보고, 왜 n-1로 나눈 것을 분산을 추정하는 지표로 사용하는 것이 타당한지 작성해 주세요.",
    "text": "3. 결과를 살펴보고, 왜 n-1로 나눈 것을 분산을 추정하는 지표로 사용하는 것이 타당한지 작성해 주세요.\nn-1로 나눈 분포가 모분산을 더 잘 드러냄"
  },
  {
    "objectID": "posts/hw5/index.html",
    "href": "posts/hw5/index.html",
    "title": "숙제5",
    "section": "",
    "text": "Chapter 9-2 설문 조사 그래프에서 각 성별 95% 신뢰구간 계산 후 그리기\n\n\nnorm.ppf() 사용해서 그릴 것. 모분산은 표본 분산을 사용해서 추정\n\n\n위 아래 수직 막대기로 표시\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\nraw_welfare = pd.read_spss(\"Koweps_hpwc14_2019_beta2.sav\")\nwelfare = raw_welfare.copy()\n\nwelfare = welfare.rename(columns = { 'h14_g3' : 'sex' , 'p1402_8aq1' : 'income'})\nwelfare = welfare[['sex', 'income']]\nwelfare[\"sex\"] = np.where(welfare[\"sex\"] == 1, 'male', 'female')\nsex_income = welfare.dropna(subset = \"income\").groupby(\"sex\", as_index = False).agg(mean_income = (\"income\", \"mean\"))\n\nsns.barplot(data = sex_income, x = \"sex\", y = \"mean_income\", hue = \"sex\")\nplt.show()\n\n\n\n\n\n\n\n\n\nfemale_mu = sex_income[\"mean_income\"][0]\nmale_mu = sex_income[\"mean_income\"][1]\n\nfemale_x = welfare.loc[welfare[\"sex\"] == \"female\"][\"income\"].dropna()\nmale_x = welfare.loc[welfare[\"sex\"] == \"male\"][\"income\"].dropna()\n\nfemale_var = np.var(female_x, ddof = 1)\nmale_var = np.var(male_x, ddof = 1)\n\nz = norm.ppf(0.95, loc = 0, scale = 1)\nfemale_l = female_mu - (z * np.sqrt(female_var) / np.sqrt(len(female_x)))\nfemale_r = female_mu + (z * np.sqrt(female_var) / np.sqrt(len(female_x)))\nmale_l = male_mu - (z * np.sqrt(male_var) / np.sqrt(len(male_x)))\nmale_r = male_mu + (z * np.sqrt(male_var) / np.sqrt(len(male_x)))\n\nsns.barplot(data = sex_income, x = \"sex\", y = \"mean_income\", hue = \"sex\")\nplt.vlines(x = \"female\", ymin = female_l, ymax = female_r, colors = \"red\")\nplt.vlines(x = \"male\", ymin = male_l, ymax = male_r, colors = \"blue\")\n\nplt.show()"
  }
]